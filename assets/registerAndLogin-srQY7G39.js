import{b as A,a as h,e as W,f as I,h as c,d as n,c as p,g as f,u as d,i as y,j as w,k as C,l as E,m as T,q as k,w as D}from"./firebase-CLNeqrfC.js";import{s as P}from"./localeStorageApi-BzC0sAnb.js";const L=async r=>{const{email:s,password:o}=r;try{const e=(await W(h,s,o)).user;await I(c(n,"users",e.uid),{...r,createdAt:new Date,userId:e.uid});const a=await e.getIdToken(),i=await S(e.uid);return P(i,a),i}catch(t){console.error("Error registering user:",t.message)}},B=async r=>{const{email:s,password:o}=r;try{const e=(await A(h,s,o)).user,a=await e.getIdToken(),i=await S(e.uid);return P(i,a),i}catch(t){console.error("Error login user:",t.message)}},F=async r=>{try{const o=await u(r.img,"my_unsigned_preset");o?(r.img=o.url,r.imgId=o.id):(r.img="",r.imgId="");const t=await C(p(n,"posts"),r),e={...r,id:t.id};await I(c(n,"posts",t.id),e)}catch(s){console.error("Error adding document:",s)}},H=async r=>{try{const s=c(n,"posts",r);await T(s),console.log("Post deleted successfully!")}catch(s){console.error("Error deleting post:",s)}},O=async(r,s,o,t,e)=>{let a="";s&&(a=await u(s,"my_unsigned_preset"));const m=c(n,"posts",r);try{await d(m,{content:o,img:a.url?a.url:t,imgId:a.id?a.id:e})}catch(l){console.error("Error adding comment: ",l)}},V=async(r,s,o,t,e)=>{console.log(r),console.log(s);let a="";const i="profile_upload",m="wall_upload";if(t){a=await u(t,i);const g=p(n,"posts"),q=k(g,D("meta.author","==",r)),_=(await f(q)).docs.map(async U=>{const b=c(n,"posts",U.id);await d(b,{"meta.profileImg":a.url})});await Promise.all(_)}let l="";e&&(l=await u(e,m));const R=c(n,"users",s);try{await d(R,{...o,updatesHistory:w(new Date().toLocaleString()),profileImg:a.url?a.url:"",profileImgID:a.id?a.id:"",wallImg:l.url?l.url:"",wallImgId:l.id?l.id:""})}catch(g){console.error("Error adding comment: ",g)}},z=async(r,s)=>{const o=c(n,"posts",r);try{await d(o,{comments:w({data:s}),"feedback.comments":y(1)})}catch(t){console.error("Error adding comment: ",t)}},G=async r=>{const s=c(n,"posts",r);try{await d(s,{img:"",imgId:""})}catch(o){console.error("Error adding comment: ",o)}},J=async(r,s)=>{const o=c(n,"posts",r);try{await d(o,{"feedback.likes":y(1),"feedback.likedPeople":w(s)})}catch(t){console.error("Error adding like: ",t)}},K=async r=>{const s=c(n,"posts",r);try{await d(s,{"feedback.views":y(1)})}catch(o){console.error("Error adding like: ",o)}},M=async r=>{try{const s=c(n,"posts",r),o=await E(s);return o.exists()?o.data():(console.log("No such document!"),null)}catch(s){return console.error("Error fetching post:",s),null}},Q=async()=>{try{const r=p(n,"posts"),o=(await f(r)).docs.map(e=>e.data());return o.sort((e,a)=>new Date(a.meta.date)-new Date(e.meta.date)),{postsArray:o,filteredArray:e=>o.filter(a=>a.meta.author===e)}}catch(r){console.error("Error loading posts",r)}};async function S(r){try{const s=c(n,"users",r),o=await E(s);if(o.exists())return o.data();throw new Error("no such user!")}catch(s){return console.error("Error fetching user:",s.message),null}}const u=async(r,s)=>{if(!r)return;const o=new FormData;o.append("file",r),o.append("upload_preset",s);try{const e=await(await fetch("https://api.cloudinary.com/v1_1/dsqegonee/image/upload",{method:"POST",body:o})).json();if(e.secure_url)return{url:e.secure_url,id:e.public_id};console.error("Error uploading your media: ",e)}catch(t){console.error("Error uploading your media: ",t)}};async function X(r){const s=p(n,"users"),o=k(s,D("name","==",r)),e=(await f(o)).docs.find(a=>a.data().name===r);return e?e.id:(alert("Somthing went wrong! Please report the mistake!"),null)}export{z as a,F as b,M as c,H as d,J as e,X as f,Q as g,S as h,O as i,G as j,B as l,K as p,L as r,V as u};
